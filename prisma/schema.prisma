generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

// models 
model User {
  id         String     @id @default(uuid())
  name       String
  email      String     @unique
  password   String
  role       Role       @default(customer)
  contactNo  String
  address    String
  profileImg String
  createdAt  DateTime   @default(now())
  MyCart     MyCart[]
  Booking    Booking[]
  Feedback   Feedback[]


  @@map("user")
}

model Category {
  id       String     @id @default(uuid())
  title    String
  Services Services[]
   createdAt DateTime @default(now())

  @@map("category")
}

model Services {
  id              String            @id @default(uuid())
  name            String
  price           String
  details         String
  image           String
  categoryId      String
  rating          String
  inStock         Stock
  status          State             @default(inActive)
  location        Location          @default(Dhaka)
  category        Category          @relation(fields: [categoryId], references: [id])
  ReviewAndRating ReviewAndRating[]
  Booking         Booking[]
  MyCart          MyCart[]
 createdAt DateTime @default(now())

  @@map("services")
}

model MyCart {
  id         String   @id @default(uuid())
  userId     String
  servicesId String
  createdAt  DateTime @default(now())
  service    Services @relation(fields: [servicesId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
  
  @@map("myCart")
}

model Booking {
  id               String    @id @default(uuid())
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  status           Status    @default(requested)
  service          Services  @relation(fields: [servicesId], references: [id])
  servicesId       String
  createdAt        DateTime  @default(now())
  booking_schedult DateTime?
  
  @@map("booking")
}

model ReviewAndRating {
  id         String   @id @default(uuid())
  review     String
  rating     Int      @default(5)
  service    Services @relation(fields: [servicesId], references: [id])
  servicesId String
 createdAt DateTime @default(now())

  @@map("reviews")
}

model BlogPost {
  id        String   @id @default(uuid())
  title     String
  text      String
  image     String
  createdAt DateTime @default(now())
}

model Faq {
  id       String @id @default(uuid())
  question String
  ans      String
  createdAt DateTime @default(now())

}

model Feedback {
  id       String @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  feedback String
  createdAt DateTime @default(now())

  @@map("feedback")
}

enum Role {
  superadmin
  admin
  customer
}

enum Stock {
  inStock
  outOfStock
}

enum Status {
  requested
  pending
  delivered
  canceled
  accepted
  rejected
}

enum State {
  active
  inActive
}

enum Location {
  Dhaka
  Rangpur
  Rajshahi
  Khulna
  Barishal
  Chittagong
  Chattagram
  Sylhet
  Mymensingh
}
